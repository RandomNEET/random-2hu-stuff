# HTTP server block - redirect all HTTP traffic to HTTPS for security
server {
    listen 80;
    server_name random-2hu-stuff.randomneet.me;
    # Permanent redirect to HTTPS with same URI and query parameters
    return 301 https://$host$request_uri;
}

# Main HTTPS server block with SSL/TLS configuration
server {
    listen 443 ssl http2;
    server_name random-2hu-stuff.randomneet.me;

    # SSL certificate configuration using Let's Encrypt
    ssl_certificate /etc/letsencrypt/live/random-2hu-stuff.randomneet.me/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/random-2hu-stuff.randomneet.me/privkey.pem;
    
    # SSL optimization settings for security and performance
    ssl_protocols TLSv1.2 TLSv1.3; # Only use modern, secure TLS versions
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers on; # Prefer server cipher order for security
    ssl_session_cache shared:SSL:10m; # Shared SSL session cache across workers
    ssl_session_timeout 10m; # SSL session timeout for performance
    
    # Security headers for protection against common web vulnerabilities
    add_header X-Frame-Options DENY; # Prevent clickjacking attacks
    add_header X-Content-Type-Options nosniff; # Prevent MIME type sniffing
    add_header X-XSS-Protection "1; mode=block"; # Enable XSS protection
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always; # Force HTTPS for 1 year
    
    # Gzip compression configuration for faster page loads
    gzip on; # Enable gzip compression
    gzip_vary on; # Add Vary: Accept-Encoding header
    gzip_min_length 1000; # Only compress files larger than 1KB
    gzip_proxied any; # Compress responses for all proxied requests
    gzip_comp_level 6; # Compression level (1-9, 6 is good balance)
    gzip_types # File types to compress
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;

    # Frontend static files root directory
    root /var/www/random-2hu-stuff/frontend;
    index index.html;

    # Frontend routing handler for Vue Router history mode
    # This enables client-side routing by serving index.html for non-existent files
    location / {
        try_files $uri $uri/ /index.html;
        
        # Static asset caching with aggressive cache headers for performance
        # Cache static assets (JS, CSS, images, fonts) for 1 year
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y; # Cache for 1 year
            add_header Cache-Control "public, immutable"; # Immutable cache for versioned assets
            access_log off; # Don't log static asset requests to reduce I/O
        }
        
        # HTML files should not be cached to ensure updates are immediately visible
        location ~* \.html$ {
            expires -1; # Expire immediately
            add_header Cache-Control "no-cache, no-store, must-revalidate"; # Prevent caching
            add_header Pragma "no-cache"; # HTTP/1.0 compatibility
        }
    }

    # Backend API proxy configuration
    # Forwards all /api/ requests to the Node.js backend server
    location /api/ {
        proxy_pass http://127.0.0.1:3000; # Backend server address
        proxy_http_version 1.1; # Use HTTP/1.1 for better performance
        proxy_set_header Upgrade $http_upgrade; # WebSocket support
        proxy_set_header Connection 'upgrade'; # WebSocket support
        proxy_set_header Host $host; # Preserve original host header
        proxy_set_header X-Real-IP $remote_addr; # Client's real IP address
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # Proxy chain IPs
        proxy_set_header X-Forwarded-Proto $scheme; # Original protocol (https)
        proxy_cache_bypass $http_upgrade; # Bypass cache for WebSocket upgrades
        
        # Timeout settings to prevent hanging connections
        proxy_connect_timeout 60s; # Connection timeout
        proxy_send_timeout 60s; # Send timeout
        proxy_read_timeout 60s; # Read timeout
        
        # Optional caching for API responses to reduce backend load
        proxy_cache_valid 200 5m; # Cache successful responses for 5 minutes
        proxy_cache_valid 404 1m; # Cache 404 responses for 1 minute
    }

    # Health check endpoint proxy for monitoring
    # Direct proxy to backend health endpoint without caching
    location /health {
        proxy_pass http://127.0.0.1:3000/health;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        access_log off; # Don't log health check requests
    }

    # Security: Block access to hidden files and directories (e.g., .git, .env)
    location ~ /\. {
        deny all; # Deny all requests to hidden files
        access_log off; # Don't log these attempts
        log_not_found off; # Don't log 404s for hidden files
    }
    
    # Security: Block access to backup files (ending with ~)
    location ~ ~$ {
        deny all; # Deny all requests to backup files
        access_log off; # Don't log these attempts
        log_not_found off; # Don't log 404s for backup files
    }

    # SEO: Serve robots.txt for web crawlers
    location = /robots.txt {
        allow all; # Allow all access to robots.txt
        log_not_found off; # Don't log if robots.txt is missing
        access_log off; # Don't log robots.txt requests
    }

    # Performance: Serve favicon.ico without logging
    location = /favicon.ico {
        log_not_found off; # Don't log if favicon is missing
        access_log off; # Don't log favicon requests
    }

    # Logging configuration for monitoring and debugging
    access_log /var/log/nginx/random-2hu-stuff.access.log; # Access log file
    error_log /var/log/nginx/random-2hu-stuff.error.log; # Error log file

    # Security: Limit client upload size to prevent DoS attacks
    client_max_body_size 10M; # Maximum request body size

    # Custom error pages for better user experience
    error_page 404 /index.html; # Serve SPA for 404s (client-side routing)
    error_page 500 502 503 504 /50x.html; # Server error pages
    location = /50x.html {
        root /usr/share/nginx/html; # Default nginx error page location
    }
}
